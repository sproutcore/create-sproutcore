import WebpackDevServer from 'webpack-dev-server';
import { merge } from 'webpack-merge';

import common from './webpack.common.mjs';
import { appNames } from './webpack.common.mjs';

// Define the backend URL here
const backendUrl = 'http://localhost:4000';

export default (options = {}) => {
    const publicPath = options.publicPath !== undefined ? options.publicPath : undefined;
    options = {
        ...options,
        publicPath,
    };

    return merge(common(options), {
        mode: 'development',
        devServer: {
            devMiddleware: {
                publicPath,
            },
            proxy: [{
                context: () => true,
                target: backendUrl,
                pathRewrite: appNames.reduce(
                    (acc, appName) => {
                        acc[`^/${appName}`] = `/${appName}`;
                        return acc;
                    },
                    {}
                ),
            }],
            compress: true, // enable gzip compression
            historyApiFallback: true, // true for index.html upon 404, object for multiple paths
            hot: true, // hot module replacement. Depends on HotModuleReplacementPlugin
            server: 'http', // https for self-signed, https://webpack.js.org/configuration/dev-server/#devserverserver
            host: '0.0.0.0',
            allowedHosts: 'all',
            port: 4020,

        },
    });
};
